generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("EC2_DATABASE_URL")
}

model Operator {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  contact      String?
  address      String?
  password     String
  latitude     Float?
  longitude    Float?
  createdAt    DateTime       @default(now())
  Bus          Bus[]
  OperatorCity OperatorCity[]
}

model City {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  createdAt    DateTime       @default(now())
  OperatorCity OperatorCity[]
}

model Bus {
  id             Int           @id @default(autoincrement())
  name           String
  number         String        @unique
  operatorId     Int
  boardingCityId Int
  droppingCityId Int
  createdAt      DateTime      @default(now())
  operatorCityId Int?
  boardingCity   OperatorCity  @relation("busBoardingCity", fields: [boardingCityId], references: [id])
  droppingCity   OperatorCity  @relation("busDroppingCity", fields: [droppingCityId], references: [id])
  OperatorCity   OperatorCity? @relation(fields: [operatorCityId], references: [id])
  operator       Operator      @relation(fields: [operatorId], references: [id])
  busSchedule    BusSchedule[]
}

model OperatorCity {
  id                 Int                  @id @default(autoincrement())
  operatorId         Int
  cityId             Int
  city               City                 @relation(fields: [cityId], references: [id])
  createdAt          DateTime             @default(now())
  busBoardingCity    Bus[]                @relation("busBoardingCity")
  busDroppingCity    Bus[]                @relation("busDroppingCity")
  Bus                Bus[]
  operator           Operator             @relation(fields: [operatorId], references: [id])
  OperatorCityPoints OperatorCityPoints[]
}

model OperatorCityPoints {
  id        Int          @id @default(autoincrement())
  cityId    Int
  time      String?
  location  String
  address   String
  latitude  Decimal
  longitude Decimal
  createdAt DateTime     @default(now())
  city      OperatorCity @relation(fields: [cityId], references: [id])
  Passenger Passenger[]
}

model BusSchedule {
  id        Int         @id @default(autoincrement())
  busId     Int
  date      String
  time      String
  bus       Bus         @relation(fields: [busId], references: [id])
  passenger Passenger[]
}

model Passenger {
  id              Int                @id @default(autoincrement())
  name            String
  email           String?
  contact         String
  seat            String
  boardingPointId Int
  createdAt       DateTime           @default(now())
  busScheduleId   Int
  date            String
  paidAmount      Float
  status          BookingStatus      @default(BOOKED)
  boardingPoint   OperatorCityPoints @relation(fields: [boardingPointId], references: [id])
  BusSchedule     BusSchedule        @relation(fields: [busScheduleId], references: [id])
}

enum BookingStatus {
  BOOKED
  CANCELED
}
